export DOTFILES=$HOME/.dotfiles

alias als="vi $DOTFILES/zsh/.aliases"
alias scripts="jq '.scripts' ./package.json"
alias dot="cd $DOTFILES"
alias dotsync="cd $DOTFILES && git add -A && git commit -m 'sync' && git push"
alias vi="nvim"
alias config="vi $DOTFILES/zsh/.zshrc"
alias config-nvim="vi $DOTFILES/nvim/.config/nvim/init.vim" 
alias reset="source ~/.zshrc"
alias dev="cd ~/dev"
# fzf combo scripts
alias ff="bash $DOTFILES/utils/tmux-sessionizer.sh"
alias ss="bash $DOTFILES/utils/list-packagejson-scripts.sh"
alias to="bash $DOTFILES/utils/fzf-git-checkout.sh"
alias sf="bash $DOTFILES/utils/fzf-vim.sh"
alias sg="bash $DOTFILES/utils/fzf-rg.sh"
alias countdown="bash $DOTFILES/utils/countdown.sh"
alias send-cmd="bash $DOTFILES/utils/tmux-commander.sh"
code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}
alias gt="git add . && git commit"
alias gta="git add -A && git commit --amend --no-edit"
alias gtf="gta && git push -f"
alias gtp="git push -u origin head"
alias discard="git checkout -- . && git clean -fd"
alias clean="git branch --merged | egrep -v '(^\*|master|main|dev|nonprod)' | xargs git branch -D"
alias tt="tmux -f $HOME/.config/tmux/.tmux.conf"
alias y="yarn"
alias ls="ls -a"
alias l="lsd -a"
alias dc="docker-compose"
alias new="git checkout -b"
alias key="ssh-add ~/.ssh/id_rsa"
# Run a fuzzy search through test files and run jest
jj(){
  TZ="utc" node_modules/.bin/jest `find ./src -type f \( -name "*.test*" -or -name "*.spec*" \) | fzf`
}

# fuzzy search through files in the current directory and cd to the dir of the file selected
cdl(){
  cd $(dirname `fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'`)
}

# cd to .git root of the current dir
cd/(){
  cd $(git rev-parse --show-toplevel)
}

get_external_ip(){
  curl ipecho.net/plain ; echo
}

# opens the current directory github pages under pull-requests
op(){
  open $(git remote get-url --push origin | sed -e 's/git@\(github.com\):\(.*\)\.git/https:\/\/\1\/\2\/pulls/')
}

# new branch from a jira ticket
newt(){
  git checkout -b $(jira issue list -a$(jira me) --plain | fzf | rg '[a-z][a-z][a-z]-\d+' -io)
}

# pipe ripgrep results to a quickfix list in vim
fpq(){
  nvim -q <(rg --column -g '!.git' -g '!node_modules' $@) +cw
}

# fuzzy search my .ssh/config
hh(){
  ssh $(grep -e '^Host \w.*' ~/.ssh/config | sed 's/Host //' | fzf --height 20%)
}
